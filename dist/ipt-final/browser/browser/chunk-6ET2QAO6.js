import{f as i,g as p,i as r,k as o,n as s,pa as m,q as l,ya as c}from"./chunk-RY5F4FTU.js";var d=class n{constructor(e){this.http=e;console.log("Department service initialized with URL:",this.apiUrl)}apiUrl=`${c.apiUrl}/api/departments`;handleError(e){let t="An error occurred";return e.error instanceof ErrorEvent?t=e.error.message:t=e.error.message||e.error.error||e.message,console.error("Department service error:",e),i(()=>t)}getAll(){return console.log("Fetching all departments from:",this.apiUrl),this.http.get(this.apiUrl).pipe(o(e=>console.log("Fetched departments:",e)),r(this.handleError))}getById(e){let t=`${this.apiUrl}/${e}`;return console.log("Fetching department by id from:",t),this.http.get(t).pipe(o(a=>console.log("Fetched department:",a)),r(this.handleError))}create(e){return console.log("Creating department at:",this.apiUrl),console.log("Department data:",e),this.http.post(this.apiUrl,e).pipe(o(t=>console.log("Created department:",t)),r(this.handleError))}update(e,t){let a=`${this.apiUrl}/${e}`;return console.log("Updating department at:",a),console.log("Update data:",t),this.http.put(a,t).pipe(o(h=>console.log("Updated department:",h)),r(this.handleError))}delete(e){let t=`${this.apiUrl}/${e}`;return console.log("Deleting department at:",t),this.http.delete(t).pipe(o(()=>console.log("Deleted department:",e)),r(this.handleError))}getDepartmentNames(){return console.log("Fetching department names from:",this.apiUrl),this.http.get(this.apiUrl).pipe(o(e=>console.log("Fetched departments for names:",e)),p(e=>e.map(t=>t.name)),r(this.handleError))}static \u0275fac=function(t){return new(t||n)(l(m))};static \u0275prov=s({token:n,factory:n.\u0275fac,providedIn:"root"})};export{d as a};
